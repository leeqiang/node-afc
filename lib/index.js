// Generated by CoffeeScript 1.7.1
(function() {
  var AFC, afc, glob,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  glob = require('glob');

  AFC = (function() {
    var DIRS, FILES, PRIORITYS;

    function AFC() {}

    PRIORITYS = ['coffee', 'js', 'json'];

    FILES = ['afc', 'config', 'config/index', "config/" + (process.env.NODE_ENV || 'development'), "config/enviroments/" + (process.env.NODE_ENV || 'development')];

    DIRS = ['/etc', process.env.PWD, "" + process.env.PWD + "/lib"];

    AFC.prototype.cache = {};

    AFC.prototype.set = function(key, value) {
      if (arguments.length === 1) {
        return this[key];
      }
      this[key] = value;
      return this;
    };

    AFC.prototype.get = AFC.prototype.set;

    AFC.prototype.__defineGetter__('config', function() {
      var config, configs, dir, dirs, ext, filename, path, _i, _j, _k, _len, _len1, _len2, _ref;
      if (this.cache.config) {
        return this.cache.config;
      }
      configs = [];
      dirs = this.dirs || DIRS;
      for (_i = 0, _len = dirs.length; _i < _len; _i++) {
        dir = dirs[_i];
        for (_j = 0, _len1 = FILES.length; _j < _len1; _j++) {
          filename = FILES[_j];
          for (_k = 0, _len2 = PRIORITYS.length; _k < _len2; _k++) {
            ext = PRIORITYS[_k];
            path = glob("" + filename + "." + ext, {
              mark: true,
              cwd: dir,
              sync: true
            });
            if (path.length && (_ref = "" + dir + "/" + path[0], __indexOf.call(configs, _ref) < 0)) {
              configs.push("" + dir + "/" + path[0]);
            }
          }
        }
      }
      config = require(configs[0] || {});
      this.cache.config = config;
      return config;
    });

    return AFC;

  })();

  afc = new AFC;

  afc.AFC = AFC;

  module.exports = afc;

}).call(this);
